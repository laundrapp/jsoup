//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jsoup/src/main/java/org/jsoup/select/NodeVisitor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupSelectNodeVisitor")
#ifdef RESTRICT_OrgJsoupSelectNodeVisitor
#define INCLUDE_ALL_OrgJsoupSelectNodeVisitor 0
#else
#define INCLUDE_ALL_OrgJsoupSelectNodeVisitor 1
#endif
#undef RESTRICT_OrgJsoupSelectNodeVisitor

#if !defined (OrgJsoupSelectNodeVisitor_) && (INCLUDE_ALL_OrgJsoupSelectNodeVisitor || defined(INCLUDE_OrgJsoupSelectNodeVisitor))
#define OrgJsoupSelectNodeVisitor_

@class OrgJsoupNodesNode;

/*!
 @brief Node visitor interface.Provide an implementing class to <code>NodeTraversor</code> to iterate through nodes.
 <p>
  This interface provides two methods, <code>head</code> and <code>tail</code>. The head method is called when the node is first
  seen, and the tail method when all of the node's children have been visited. As an example, head can be used to
  create a start tag for a node, and tail to create the end tag. 
 </p>
 */
@protocol OrgJsoupSelectNodeVisitor < JavaObject >

/*!
 @brief Callback for when a node is first visited.
 @param node the node being visited.
 @param depth the depth of the node, relative to the root node. E.g., the root node has depth 0, and a child node  of that will have depth 1.
 */
- (void)headWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)node
                          withInt:(jint)depth;

/*!
 @brief Callback for when a node is last visited, after all of its descendants have been visited.
 @param node the node being visited.
 @param depth the depth of the node, relative to the root node. E.g., the root node has depth 0, and a child node  of that will have depth 1.
 */
- (void)tailWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)node
                          withInt:(jint)depth;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJsoupSelectNodeVisitor)

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupSelectNodeVisitor)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJsoupSelectNodeVisitor")
