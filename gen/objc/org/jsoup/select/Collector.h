//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jsoup/src/main/java/org/jsoup/select/Collector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupSelectCollector")
#ifdef RESTRICT_OrgJsoupSelectCollector
#define INCLUDE_ALL_OrgJsoupSelectCollector 0
#else
#define INCLUDE_ALL_OrgJsoupSelectCollector 1
#endif
#undef RESTRICT_OrgJsoupSelectCollector

#if !defined (OrgJsoupSelectCollector_) && (INCLUDE_ALL_OrgJsoupSelectCollector || defined(INCLUDE_OrgJsoupSelectCollector))
#define OrgJsoupSelectCollector_

@class OrgJsoupNodesElement;
@class OrgJsoupSelectElements;
@class OrgJsoupSelectEvaluator;

/*!
 @brief Collects a list of elements that match the supplied criteria.
 @author Jonathan Hedley
 */
@interface OrgJsoupSelectCollector : NSObject

#pragma mark Public

/*!
 @brief Build a list of elements, by visiting root and every descendant of root, and testing it against the evaluator.
 @param eval Evaluator to test elements against
 @param root root of tree to descend
 @return list of matches; empty if none
 */
+ (OrgJsoupSelectElements *)collectWithOrgJsoupSelectEvaluator:(OrgJsoupSelectEvaluator *)eval
                                      withOrgJsoupNodesElement:(OrgJsoupNodesElement *)root;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJsoupSelectCollector)

FOUNDATION_EXPORT OrgJsoupSelectElements *OrgJsoupSelectCollector_collectWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(OrgJsoupSelectEvaluator *eval, OrgJsoupNodesElement *root);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupSelectCollector)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJsoupSelectCollector")
