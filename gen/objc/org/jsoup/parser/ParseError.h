//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jsoup/src/main/java/org/jsoup/parser/ParseError.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupParserParseError")
#ifdef RESTRICT_OrgJsoupParserParseError
#define INCLUDE_ALL_OrgJsoupParserParseError 0
#else
#define INCLUDE_ALL_OrgJsoupParserParseError 1
#endif
#undef RESTRICT_OrgJsoupParserParseError

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJsoupParserParseError_) && (INCLUDE_ALL_OrgJsoupParserParseError || defined(INCLUDE_OrgJsoupParserParseError))
#define OrgJsoupParserParseError_

@class IOSObjectArray;

/*!
 @brief A Parse Error records an error in the input HTML that occurs in either the tokenisation or the tree building phase.
 */
@interface OrgJsoupParserParseError : NSObject

#pragma mark Public

/*!
 @brief Retrieve the error message.
 @return the error message.
 */
- (NSString *)getErrorMessage;

/*!
 @brief Retrieves the offset of the error.
 @return error offset within input
 */
- (jint)getPosition;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)pos
                         withNSString:(NSString *)errorMsg;

- (instancetype __nonnull)initWithInt:(jint)pos
                         withNSString:(NSString *)errorFormat
                    withNSObjectArray:(IOSObjectArray *)args;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJsoupParserParseError)

FOUNDATION_EXPORT void OrgJsoupParserParseError_initWithInt_withNSString_(OrgJsoupParserParseError *self, jint pos, NSString *errorMsg);

FOUNDATION_EXPORT OrgJsoupParserParseError *new_OrgJsoupParserParseError_initWithInt_withNSString_(jint pos, NSString *errorMsg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJsoupParserParseError *create_OrgJsoupParserParseError_initWithInt_withNSString_(jint pos, NSString *errorMsg);

FOUNDATION_EXPORT void OrgJsoupParserParseError_initWithInt_withNSString_withNSObjectArray_(OrgJsoupParserParseError *self, jint pos, NSString *errorFormat, IOSObjectArray *args);

FOUNDATION_EXPORT OrgJsoupParserParseError *new_OrgJsoupParserParseError_initWithInt_withNSString_withNSObjectArray_(jint pos, NSString *errorFormat, IOSObjectArray *args) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJsoupParserParseError *create_OrgJsoupParserParseError_initWithInt_withNSString_withNSObjectArray_(jint pos, NSString *errorFormat, IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupParserParseError)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgJsoupParserParseError")
