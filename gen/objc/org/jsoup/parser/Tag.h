//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jsoup/src/main/java/org/jsoup/parser/Tag.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupParserTag")
#ifdef RESTRICT_OrgJsoupParserTag
#define INCLUDE_ALL_OrgJsoupParserTag 0
#else
#define INCLUDE_ALL_OrgJsoupParserTag 1
#endif
#undef RESTRICT_OrgJsoupParserTag

#if !defined (OrgJsoupParserTag_) && (INCLUDE_ALL_OrgJsoupParserTag || defined(INCLUDE_OrgJsoupParserTag))
#define OrgJsoupParserTag_

/*!
 @brief HTML Tag capabilities.
 @author Jonathan Hedley, jonathan@@hedley.net
 */
@interface OrgJsoupParserTag : NSObject

#pragma mark Public

/*!
 @brief Gets if this tag can contain block tags.
 @return if tag can contain block tags
 */
- (jboolean)canContainBlock;

- (jboolean)isEqual:(id)o;

/*!
 @brief Gets if this tag should be formatted as a block (or as inline)
 @return if should be formatted as block or inline
 */
- (jboolean)formatAsBlock;

/*!
 @brief Get this tag's name.
 @return the tag's name
 */
- (NSString *)getName;

- (NSUInteger)hash;

/*!
 @brief Gets if this is a block tag.
 @return if block tag
 */
- (jboolean)isBlock;

/*!
 @brief Gets if this tag is a data only tag.
 @return if this tag is a data only tag
 */
- (jboolean)isData;

/*!
 @brief Get if this is an empty tag
 @return if this is an empty tag
 */
- (jboolean)isEmpty;

/*!
 @brief Get if this tag represents a control associated with a form.E.g. input, textarea, output
 @return if associated with a form
 */
- (jboolean)isFormListed;

/*!
 @brief Get if this tag represents an element that should be submitted with a form.E.g. input, option
 @return if submittable with a form
 */
- (jboolean)isFormSubmittable;

/*!
 @brief Gets if this tag is an inline tag.
 @return if this tag is an inline tag.
 */
- (jboolean)isInline;

/*!
 @brief Get if this is a pre-defined tag, or was auto created on parsing.
 @return if a known tag
 */
- (jboolean)isKnownTag;

/*!
 @brief Check if this tagname is a known tag.
 @param tagName name of tag
 @return if known HTML tag
 */
+ (jboolean)isKnownTagWithNSString:(NSString *)tagName;

/*!
 @brief Get if this tag is self closing.
 @return if this tag should be output as self closing.
 */
- (jboolean)isSelfClosing;

/*!
 @brief Get if this tag should preserve whitespace within child text nodes.
 @return if preserve whitepace
 */
- (jboolean)preserveWhitespace;

- (NSString *)description;

/*!
 @brief Get a Tag by name.If not previously defined (unknown), returns a new generic tag, that can do anything.
 <p>
  Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals(). 
 </p>
 @param tagName Name of tag, e.g. "p". Case insensitive.
 @return The tag, either defined or new generic.
 */
+ (OrgJsoupParserTag *)valueOfWithNSString:(NSString *)tagName;

#pragma mark Package-Private

- (OrgJsoupParserTag *)setSelfClosing;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgJsoupParserTag)

FOUNDATION_EXPORT OrgJsoupParserTag *OrgJsoupParserTag_valueOfWithNSString_(NSString *tagName);

FOUNDATION_EXPORT jboolean OrgJsoupParserTag_isKnownTagWithNSString_(NSString *tagName);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupParserTag)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJsoupParserTag")
