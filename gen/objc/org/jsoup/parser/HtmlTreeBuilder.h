//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jsoup/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupParserHtmlTreeBuilder")
#ifdef RESTRICT_OrgJsoupParserHtmlTreeBuilder
#define INCLUDE_ALL_OrgJsoupParserHtmlTreeBuilder 0
#else
#define INCLUDE_ALL_OrgJsoupParserHtmlTreeBuilder 1
#endif
#undef RESTRICT_OrgJsoupParserHtmlTreeBuilder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJsoupParserHtmlTreeBuilder_) && (INCLUDE_ALL_OrgJsoupParserHtmlTreeBuilder || defined(INCLUDE_OrgJsoupParserHtmlTreeBuilder))
#define OrgJsoupParserHtmlTreeBuilder_

#define RESTRICT_OrgJsoupParserTreeBuilder 1
#define INCLUDE_OrgJsoupParserTreeBuilder 1
#include "org/jsoup/parser/TreeBuilder.h"

@class IOSObjectArray;
@class JavaUtilArrayList;
@class OrgJsoupNodesDocument;
@class OrgJsoupNodesElement;
@class OrgJsoupNodesFormElement;
@class OrgJsoupNodesNode;
@class OrgJsoupParserHtmlTreeBuilderState;
@class OrgJsoupParserParseErrorList;
@class OrgJsoupParserToken;
@class OrgJsoupParserToken_Character;
@class OrgJsoupParserToken_Comment;
@class OrgJsoupParserToken_StartTag;
@protocol JavaUtilList;

/*!
 @brief HTML Tree Builder; creates a DOM from Tokens.
 */
@interface OrgJsoupParserHtmlTreeBuilder : OrgJsoupParserTreeBuilder

#pragma mark Public

- (NSString *)description;

#pragma mark Protected

- (jboolean)processWithOrgJsoupParserToken:(OrgJsoupParserToken *)token;

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (OrgJsoupNodesElement *)aboveOnStackWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el;

- (void)clearFormattingElementsToLastMarker;

- (void)clearStackToTableBodyContext;

- (void)clearStackToTableContext;

- (void)clearStackToTableRowContext;

- (void)errorWithOrgJsoupParserHtmlTreeBuilderState:(OrgJsoupParserHtmlTreeBuilderState *)state;

- (jboolean)framesetOk;

- (void)framesetOkWithBoolean:(jboolean)framesetOk;

- (void)generateImpliedEndTags;

/*!
 @brief 11.2.5.2 Closing elements that have implied end tags<p>
      When the steps below require the UA to generate implied end tags, then, while the current node is a dd element, a
      dt element, an li element, an option element, an optgroup element, a p element, an rp element, or an rt element,
      the UA must pop the current node off the stack of open elements.
 @param excludeTag If a step requires the UA to generate implied end tags but lists an element to exclude from the      process, then the UA must perform the above steps as if that element was not in the above list.
 */
- (void)generateImpliedEndTagsWithNSString:(NSString *)excludeTag;

- (OrgJsoupNodesElement *)getActiveFormattingElementWithNSString:(NSString *)nodeName;

- (NSString *)getBaseUri;

- (OrgJsoupNodesDocument *)getDocument;

- (OrgJsoupNodesFormElement *)getFormElement;

- (OrgJsoupNodesElement *)getFromStackWithNSString:(NSString *)elName;

- (OrgJsoupNodesElement *)getHeadElement;

- (id<JavaUtilList>)getPendingTableCharacters;

- (JavaUtilArrayList *)getStack;

- (jboolean)inButtonScopeWithNSString:(NSString *)targetName;

- (jboolean)inListItemScopeWithNSString:(NSString *)targetName;

- (jboolean)inScopeWithNSString:(NSString *)targetName;

- (jboolean)inScopeWithNSString:(NSString *)targetName
              withNSStringArray:(IOSObjectArray *)extras;

- (jboolean)inScopeWithNSStringArray:(IOSObjectArray *)targetNames;

- (jboolean)inSelectScopeWithNSString:(NSString *)targetName;

- (void)insertWithOrgJsoupParserToken_Character:(OrgJsoupParserToken_Character *)characterToken;

- (void)insertWithOrgJsoupParserToken_Comment:(OrgJsoupParserToken_Comment *)commentToken;

- (void)insertWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el;

- (OrgJsoupNodesElement *)insertWithOrgJsoupParserToken_StartTag:(OrgJsoupParserToken_StartTag *)startTag;

- (OrgJsoupNodesElement *)insertEmptyWithOrgJsoupParserToken_StartTag:(OrgJsoupParserToken_StartTag *)startTag;

- (OrgJsoupNodesFormElement *)insertFormWithOrgJsoupParserToken_StartTag:(OrgJsoupParserToken_StartTag *)startTag
                                                             withBoolean:(jboolean)onStack;

- (void)insertInFosterParentWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)inArg;

- (void)insertMarkerToFormattingElements;

- (void)insertOnStackAfterWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)after
                          withOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg;

- (OrgJsoupNodesElement *)insertStartTagWithNSString:(NSString *)startTagName;

- (jboolean)inTableScopeWithNSString:(NSString *)targetName;

- (jboolean)isFosterInserts;

- (jboolean)isFragmentParsing;

- (jboolean)isInActiveFormattingElementsWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el;

- (jboolean)isSpecialWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el;

- (OrgJsoupNodesElement *)lastFormattingElement;

- (void)markInsertionMode;

- (void)maybeSetBaseUriWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)base;

- (void)newPendingTableCharacters OBJC_METHOD_FAMILY_NONE;

- (jboolean)onStackWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el;

- (OrgJsoupParserHtmlTreeBuilderState *)originalState;

- (OrgJsoupNodesDocument *)parseWithNSString:(NSString *)input
                                withNSString:(NSString *)baseUri
            withOrgJsoupParserParseErrorList:(OrgJsoupParserParseErrorList *)errors;

- (id<JavaUtilList>)parseFragmentWithNSString:(NSString *)inputFragment
                     withOrgJsoupNodesElement:(OrgJsoupNodesElement *)context
                                 withNSString:(NSString *)baseUri
             withOrgJsoupParserParseErrorList:(OrgJsoupParserParseErrorList *)errors;

- (OrgJsoupNodesElement *)pop;

- (void)popStackToBeforeWithNSString:(NSString *)elName;

- (void)popStackToCloseWithNSString:(NSString *)elName;

- (void)popStackToCloseWithNSStringArray:(IOSObjectArray *)elNames;

- (jboolean)processWithOrgJsoupParserToken:(OrgJsoupParserToken *)token
    withOrgJsoupParserHtmlTreeBuilderState:(OrgJsoupParserHtmlTreeBuilderState *)state;

- (void)pushWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)element;

- (void)pushActiveFormattingElementsWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg;

- (void)reconstructFormattingElements;

- (void)removeFromActiveFormattingElementsWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el;

- (jboolean)removeFromStackWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el;

- (OrgJsoupNodesElement *)removeLastFormattingElement;

- (void)replaceActiveFormattingElementWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)outArg
                                      withOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg;

- (void)replaceOnStackWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)outArg
                      withOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg;

- (void)resetInsertionMode;

- (void)setFormElementWithOrgJsoupNodesFormElement:(OrgJsoupNodesFormElement *)formElement;

- (void)setFosterInsertsWithBoolean:(jboolean)fosterInserts;

- (void)setHeadElementWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)headElement;

- (void)setPendingTableCharactersWithJavaUtilList:(id<JavaUtilList>)pendingTableCharacters;

- (OrgJsoupParserHtmlTreeBuilderState *)state;

- (void)transitionWithOrgJsoupParserHtmlTreeBuilderState:(OrgJsoupParserHtmlTreeBuilderState *)state;

@end

J2OBJC_STATIC_INIT(OrgJsoupParserHtmlTreeBuilder)

inline IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_get_TagsSearchInScope(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagsSearchInScope;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupParserHtmlTreeBuilder, TagsSearchInScope, IOSObjectArray *)

FOUNDATION_EXPORT void OrgJsoupParserHtmlTreeBuilder_init(OrgJsoupParserHtmlTreeBuilder *self);

FOUNDATION_EXPORT OrgJsoupParserHtmlTreeBuilder *new_OrgJsoupParserHtmlTreeBuilder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJsoupParserHtmlTreeBuilder *create_OrgJsoupParserHtmlTreeBuilder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupParserHtmlTreeBuilder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgJsoupParserHtmlTreeBuilder")
