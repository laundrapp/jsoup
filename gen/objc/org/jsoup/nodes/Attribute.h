//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jsoup/src/main/java/org/jsoup/nodes/Attribute.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupNodesAttribute")
#ifdef RESTRICT_OrgJsoupNodesAttribute
#define INCLUDE_ALL_OrgJsoupNodesAttribute 0
#else
#define INCLUDE_ALL_OrgJsoupNodesAttribute 1
#endif
#undef RESTRICT_OrgJsoupNodesAttribute

#if !defined (OrgJsoupNodesAttribute_) && (INCLUDE_ALL_OrgJsoupNodesAttribute || defined(INCLUDE_OrgJsoupNodesAttribute))
#define OrgJsoupNodesAttribute_

#define RESTRICT_JavaUtilMap 1
#define INCLUDE_JavaUtilMap_Entry 1
#include "java/util/Map.h"

@class JavaLangStringBuilder;
@class OrgJsoupNodesDocument_OutputSettings;

/*!
 @brief A single key + value attribute.Keys are trimmed and normalised to lower-case.
 @author Jonathan Hedley, jonathan@@hedley.net
 */
@interface OrgJsoupNodesAttribute : NSObject < JavaUtilMap_Entry, NSCopying >

#pragma mark Public

/*!
 @brief Create a new attribute from unencoded (raw) key and value.
 @param key attribute key
 @param value attribute value
 - seealso: #createFromEncoded
 */
- (instancetype)initWithNSString:(NSString *)key
                    withNSString:(NSString *)value;

- (OrgJsoupNodesAttribute *)java_clone;

/*!
 @brief Create a new Attribute from an unencoded key and a HTML attribute encoded value.
 @param unencodedKey assumes the key is not encoded, as can be only run of simple \w chars.
 @param encodedValue HTML attribute encoded value
 @return attribute
 */
+ (OrgJsoupNodesAttribute *)createFromEncodedWithNSString:(NSString *)unencodedKey
                                             withNSString:(NSString *)encodedValue;

- (jboolean)isEqual:(id)o;

/*!
 @brief Get the attribute key.
 @return the attribute key
 */
- (NSString *)getKey;

/*!
 @brief Get the attribute value.
 @return the attribute value
 */
- (NSString *)getValue;

- (NSUInteger)hash;

/*!
 @brief Get the HTML representation of this attribute; e.g.
 <code>href="index.html"</code>.
 @return HTML
 */
- (NSString *)html;

/*!
 @brief Set the attribute key.Gets normalised as per the constructor method.
 @param key the new key; must not be null
 */
- (void)setKeyWithNSString:(NSString *)key;

/*!
 @brief Set the attribute value.
 @param value the new attribute value; must not be null
 */
- (NSString *)setValueWithId:(NSString *)value;

/*!
 @brief Get the string representation of this attribute, implemented as <code>html()</code>.
 @return string
 */
- (NSString *)description;

#pragma mark Protected

- (void)htmlWithJavaLangStringBuilder:(JavaLangStringBuilder *)accum
withOrgJsoupNodesDocument_OutputSettings:(OrgJsoupNodesDocument_OutputSettings *)outArg;

- (jboolean)isBooleanAttribute;

- (jboolean)isDataAttribute;

/*!
 @brief Collapsible if it's a boolean attribute and value is empty or same as name
 @param outArg Outputsettings
 @return Returns whether collapsible or not
 */
- (jboolean)shouldCollapseAttributeWithOrgJsoupNodesDocument_OutputSettings:(OrgJsoupNodesDocument_OutputSettings *)outArg;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgJsoupNodesAttribute)

FOUNDATION_EXPORT void OrgJsoupNodesAttribute_initWithNSString_withNSString_(OrgJsoupNodesAttribute *self, NSString *key, NSString *value);

FOUNDATION_EXPORT OrgJsoupNodesAttribute *new_OrgJsoupNodesAttribute_initWithNSString_withNSString_(NSString *key, NSString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJsoupNodesAttribute *create_OrgJsoupNodesAttribute_initWithNSString_withNSString_(NSString *key, NSString *value);

FOUNDATION_EXPORT OrgJsoupNodesAttribute *OrgJsoupNodesAttribute_createFromEncodedWithNSString_withNSString_(NSString *unencodedKey, NSString *encodedValue);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupNodesAttribute)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJsoupNodesAttribute")
