//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jsoup/src/main/java/org/jsoup/helper/Validate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsoupHelperValidate")
#ifdef RESTRICT_OrgJsoupHelperValidate
#define INCLUDE_ALL_OrgJsoupHelperValidate 0
#else
#define INCLUDE_ALL_OrgJsoupHelperValidate 1
#endif
#undef RESTRICT_OrgJsoupHelperValidate

#if !defined (OrgJsoupHelperValidate_) && (INCLUDE_ALL_OrgJsoupHelperValidate || defined(INCLUDE_OrgJsoupHelperValidate))
#define OrgJsoupHelperValidate_

@class IOSObjectArray;

/*!
 @brief Simple validation methods.Designed for jsoup internal use
 */
@interface OrgJsoupHelperValidate : NSObject

#pragma mark Public

/*!
 @brief Cause a failure.
 @param msg message to output.
 */
+ (void)failWithNSString:(NSString *)msg;

/*!
 @brief Validates that the value is false
 @param val object to test
 */
+ (void)isFalseWithBoolean:(jboolean)val;

/*!
 @brief Validates that the value is false
 @param val object to test
 @param msg message to output if validation fails
 */
+ (void)isFalseWithBoolean:(jboolean)val
              withNSString:(NSString *)msg;

/*!
 @brief Validates that the value is true
 @param val object to test
 */
+ (void)isTrueWithBoolean:(jboolean)val;

/*!
 @brief Validates that the value is true
 @param val object to test
 @param msg message to output if validation fails
 */
+ (void)isTrueWithBoolean:(jboolean)val
             withNSString:(NSString *)msg;

/*!
 @brief Validates that the array contains no null elements
 @param objects the array to test
 */
+ (void)noNullElementsWithNSObjectArray:(IOSObjectArray *)objects;

/*!
 @brief Validates that the array contains no null elements
 @param objects the array to test
 @param msg message to output if validation fails
 */
+ (void)noNullElementsWithNSObjectArray:(IOSObjectArray *)objects
                           withNSString:(NSString *)msg;

/*!
 @brief Validates that the string is not empty
 @param string the string to test
 */
+ (void)notEmptyWithNSString:(NSString *)string;

/*!
 @brief Validates that the string is not empty
 @param string the string to test
 @param msg message to output if validation fails
 */
+ (void)notEmptyWithNSString:(NSString *)string
                withNSString:(NSString *)msg;

/*!
 @brief Validates that the object is not null
 @param obj object to test
 */
+ (void)notNullWithId:(id)obj;

/*!
 @brief Validates that the object is not null
 @param obj object to test
 @param msg message to output if validation fails
 */
+ (void)notNullWithId:(id)obj
         withNSString:(NSString *)msg;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJsoupHelperValidate)

FOUNDATION_EXPORT void OrgJsoupHelperValidate_notNullWithId_(id obj);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_notNullWithId_withNSString_(id obj, NSString *msg);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_isTrueWithBoolean_(jboolean val);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_isTrueWithBoolean_withNSString_(jboolean val, NSString *msg);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_isFalseWithBoolean_(jboolean val);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_isFalseWithBoolean_withNSString_(jboolean val, NSString *msg);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_noNullElementsWithNSObjectArray_(IOSObjectArray *objects);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_noNullElementsWithNSObjectArray_withNSString_(IOSObjectArray *objects, NSString *msg);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_notEmptyWithNSString_(NSString *string);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_notEmptyWithNSString_withNSString_(NSString *string, NSString *msg);

FOUNDATION_EXPORT void OrgJsoupHelperValidate_failWithNSString_(NSString *msg);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupHelperValidate)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJsoupHelperValidate")
